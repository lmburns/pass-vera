.TH pass-vera 1 March 2021 pass-vera

.SH NAME
pass-vera \- A \fBpass\fP(1) extension that adds another layer of encryption
by encrypting the password-store inside a \fBveracrypt\fP(1) drive.

.SH SYNOPSIS
\fBpass vera\fP \fI<gpg-id>\fP [\fB-n\fP] [\fB-i\fP | \fB-k\fP | \fB--tmp-key\fP] [\fB-o\fP] [\fB-y\fP] [\fB-p\fP \fIpath\fP] [\fB-q\fP | \fB-v\fP]
                   [\fB--for-me\fP] [\fB-r\fP] [\fB-s\fP] [\fB-u\fP] [\fB-c\fP [\fIa|auto|*\fP]] [\fB-g\fP] [\fB-t\fP \fItime\fP]
.br
\fBpass open\fP [\fB-f\fP] [\fB-q\fP | \fB-v\fP] [\fB-c\fP [\fIa|auto|*\fP]] [\fB-y\fP] [\fB-i\fP] [\fB-t\fP \fItime\fP]

.br
\fBpass close\fP [\fB-f\fP] [\fB-q\fP | \fB-v\fP] [\fB-c\fP] \fIa|auto|*\fP]]

.SH DESCRIPTION
The file and directory names in the password-store that is created by \fBpass\fP(1)
are not encrypted and are available for anyone with access to the computer to see.
\fBpass vera\fP provides a solution to this problem by moving the password-store to
an encrypted drive that is created by \fBveracrypt\fP(1). The password-store can be
encrypted (i.e., the folder doesn't exist) when it is not being used.

The same GPG key (by default) is used to encrypt passwords and the veracrypt
drive, therefore one doesn't need to manage another key. There is also an
option to move an existing password-store to the location of the new one
without any manual intervention. Moreover,  pass-vera can be given a timer
as an argument that will automatically close the password-store after the
specified amount of time has passed.

A configuration file can be used to create and mount the VeraCrypt container. Using the
command \fBpass vera --gen-conf\fP [\fIJSON | YAML\fP] will generate a configuration file
located at \fI$XDG_CONFIG_HOME/pass-vera/vera.JSON\fP. To use this configuration file, specify
\fB--conf\fP [\fIa|auto|*\fP] when using all three commands. See the \fBCONFIGURATION\fP
section for all available options.

.TP
.B BEFORE USING THIS PROGRAM:
Make a backup of your password-store directory. Do this even if you plan on specifying the
\fB--for-me\fP argument which will transfer over the pre-existing password-store for you.
Once the vera is created and the passwords are moved into the vera, only then should you delete
the backup.

.TP
.B WORKFLOW
.IP
\fB(1)\fP Create a password vera with \fBpass vera\fP <\fIgpg-id\fP>. Type anything in the text
file that opens (make sure to remember it). Then, one will be prompted for a password to be
entered for the veracrypt drive itself (it does not have to be the same as the text file). The
"vera", is created and mounted in \fIPASSWORD_STORE_DIR\fP (or, if unset, then \fI~/.password-store\fP).
Finally, the newly created drive will be initialized as a password-store using the same GPG key.

The \fItext file\fP created in this process is used as a keyfile to the vera. It works by
encrypting the key using GPG when it is not being used, and decrypting the key at
the time of mounting the drive/using \fBpass open\fP.

.IP
\fB(2)\fP If you have \fIPASSWORD_STORE_DIR\fP set, copy your backup of the password-store to this
location, otherwise copy it to \fI~/.password-store\fP. Now, pass can be used as usual.
.IP
\fB(3)\fP When finished, close the password vera: \fBpass close\fP.
.IP
\fB(4)\fP To use pass again, open the password vera: \fBpass open\fP.


.SH COMMAND

.TP
\fBpass vera\fP \fI<gpg-id>\fP [ \fB--no-init\fP, \fB-n\fP ] [\fB--timer\fP=\fItime\fP, \fB-t\fP \fItime\fP]
   [ \fB--path\fP=\fIsubfolder\fP, \fB-p\fP \fIsubfolder\fP ] [\fB--truecrypt\fP, \fB-y\fP]
   [\fB--vera-key\fP, \fB-k\fP] [\fB--overwrite-key\fP, \fB-o\fP] [\fB--tmp-key\fP]
   [\fB--invisi-key\fP, \fB-i\fP] [\fB--force\fP, \fB-f\fP] [\fB--status\fP, \fB-s\fP] [\fB--gen-conf\fP [\fIJSON | YAML\fP]]
   [\fB--conf\fP=[\fIa|auto|*\fP], \fB-c\fP [\fIa|auto|*\fP]] [\fB--usage\fP, \fB-u\fP] [\fB--for-me\fP] [\fB--reencrypt\fP, \fB-r\fP]

Create and initialize a new password vera. This command must be run first,
before a password-store can be used. The user will be prompted with a blank text
document where anything can be entered (be sure to remember it), and then prompted
again to enter a password that will encrypt the veracrypt drive.

If no key type is given (\fB--vera-key\fP, \fB--invisi-key\fP, or \fB--tmp-key\fP) then the
blank text document that is prompted will be encrypted, and the decrypted version of that
file will be used as the key for the vera. The key will remain encrypted until the user
opens the vera, and then once the key has finished its purpose it will be re-encrypted.
If this key is lost, all the data within the vera will become inaccessible.

Use \fIgpg-id\fP for the encryption of both passwords and vera. Multiple gpg-ids
may be specified to encrypt the vera and each password/directory within it.

If \fB--no-init\fP, \fB-n\fP is specified, the password-store is not initialized.
By default, pass-vera initializes the password-store with the same key(s) that
generated the vera. The purpose of this argument is to give the user the option to
initialize the password-store with a different key or set of keys.

If \fB--timer\fP, \fB-t\fP is specified, along with a \fItime\fP argument, the password
store will automatically close using a \fBlaunchctl\fP(1) agent that runs a script
after the given time. The agent will be unloaded once the pass vera is closed and dismounted,
then a notification will be sent using an osascript.

\fINOTE\fP: The launchctl agent is rounded to the nearest minute and may not close
in the exact amount of specified time. For example, the time is 10:02:20 and a 1 minute
timer is given, the launchctl agent will run in 40 seconds.

.TP
.B TIMER FORMAT
Must match one of the following:
.IP
.br
  \fB(1)\fP "1 hour 5 minutes"      \fB(2)\fP "1hour 5minutes"      \fB(3)\fP "1hr 5 minutes"
.IP
.br
  \fB(4)\fP "1 hr 5 mins"           \fB(3)\fP "1hr 5mins"           \fB(6)\fP 1hr
.IP
.br
  \fINote\fP: An hour is not required when specifying time. Also, if both an
.br
  hour and minute are specified, place the parameter in quotation marks. The
.br
  only reason why one would not ever quote the parameter is if something like
.br
  1hr is given.

If \fB--path\fP or \fB-p\fP is specified, along with a \fIsubfolder\fP,
a specific password vera using the given gpg-id or a given set of gpg-ids is
assigned to that specific subfolder of the password-store. The \fIsubfolder\fP
is not a full path, only a folder name that will be created in the process of creating
the vera.

If \fB--truecrypt\fP or \fB-y\fP is specified, the vera will have enabled TrueCrypt
compatibility mode to permit the mouting of volumes that were created using TrueCrypt
versions 6.x or 7.x. This option can be used by setting the \fIPASSWORD_STORE_VERA_FILE\fP
environment variable to a file that is used by TrueCrypt.

If \fB--vera-key\fP or \fB-k\fP is specified, /dev/urandom will be used to create
a key specifically for the vera drive. This is stored in your home folder and is specified
by the \fIPASSWORD_STORE_VERA_KEY\fP environment variable. If this key is lost, all the data
within the vera will become inaccessible.

If \fB--overwrite-key\fP or \fB-o\fP is specified, the existing key that is used
by pass vera to mount the drive will be overwritten with the new kind of key that
is specified. This option should be used only whenever one is having some sort of
issue setting pass-vera up, and has backed up all of the data on the existing vera drive.

If \fB--invisi-key\fP or \fB-i\fP is specified, the key will be created inside
of a directory that will automatically shred itself once vera is mounted. The
difference between the invisible key and the temporary key is that the invisible
key can be used again, even though it is not the same file. VeraCrypt works in a way
such that a key is considered to be the same if it has the same filename and same
contents. Therefore, after using this option, later when one is opening the vera,
\fBpass open --invisi-key\fP must be used and it will work the same as if the key had
never been deleted.

If \fB--tmp-key\fP is specified, a one-time key will be created and used as the keyfile
for the vera. All data that is placed within this drive while it is mounted will no longer
 be accessible when it is dismounted.

If \fB--for-me\fP is specified, pass vera will copy an existing password-store to
the location of the new password-store whenever it is being created. When using this option,
it would still be wise to backup the password-store directory until one has made sure that
it does work.

If \fB--reencrypt\fP is specified, pass vera will re-encrypt the files within the
existing password-store when transfering them over the location of the new password-store.
This option is only able to be used whenever \fB--for-me\fP is also used.

If \fB--gen-conf\fP or \fB-g\fP is specified with a sub-argument of \fIJSON\fP or
\fIYAML\fP, pass vera will create a configuration file at the location
\fI$XDG_CONFIG_HOME/pass-vera\fP and will exit.

If \fB--conf\fP or \fB-c\fP is specified, with \fIa|auto\fP or \fIc|custom\fP,
pass vera will attempt to \fIauto\fPmatically choose the configuration file in the directory
\fI$XDG_CONFIG_HOME/pass-vera\fP. If only one configuration file is present, pass vera will
automatically mount the password store. However, if multiple configuration files are present
and \fIauto\fP is passed, an option will be presented to choose one of the configurations through
\fBfzf(1)\fP. If you would like to bypass this prompt, use \fIc\fP or \fIcustom\fP as
a sub-argument (e.g., \fB--conf custom\fP) and it will bring up a fuzzy finder to select
the configuration. A \fIYAML\fP file can also be used. The only filetypes that are supported
at this point are JSON and YAML. Examples are located at the bottom of this page in
the \fBCONFIGURATION\fP section.

If \fB--force\fP is specified, the password vera will create or mount the
password-store to a volume that is in use, or it will force dismount a volume
that is in use. This can also overwrite files, so use cautiously.

If \fB--status\fP or \fB-s\fP is specified, the status of the vera (mounted or not)
will be printed on the screen.

If \fB--usage\fP or \fB-u\fP is specified, the space used, space available, and percentage
of space used on the container will be displayed. A sub-argument must be passed to
get the correct container. The options are \fIc|custom\fP and \fIa|auto\fP, for
example: \fB--usage auto\fP.

.TP
\fBpass open\fP [\fB--timer\fP=\fItime\fP, \fB-t\fP \fItime\fP] [\fB--truecrypt\fP, \fB-y\fP]
   [\fB--invisi-key\fP, \fB-i\fP] [\fB--force\fP, \fB-f\fP] [\fB--conf\fP=[\fIa|auto|*\fP], \fB-c\fP [\fIa|auto|*\fP]] [\fIsubfolder\fP]

Open a password vera. If a \fItime\fP parameter is given (e.g., "1 hour 5 minutes")
then a launchctl agent will be loaded. After the specified time interval,
a script will run that will dismount the drive and unload the agent.

.TP
.B ADD MULTIPLE TIMERS
If \fB--timer\fP or \fB-t\fP is specified, along with \fItime\fP argument, the password
store will be automatically closed using a launchctl agent that runs a script
after a given time. If a '.timer' file was already present in the store, this time
will be updated, which updates the launchctl agent. Therefore, multiple timers can be
passed, one extending upon the next.

For example, if you open the password vera
using \fBpass open --timer=\fP\fI5 minutes\fP, and then one minute later decide
to add more time to the already running timer by using \fBpass open --timer=\fP\fI2 minutes\fP,
the password vera will close in 6 minutes.

If \fB--invisi-key\fP or \fB-i\fP was specified when creating the password-vera, then
when opening the password-vera, this argument must be specified again.

If \fB--truecrypt\fP or \fB-y\fP was specified when creating the password-vera (by setting
\fIPASSWORD_STORE_VERA_FILE\fP to a file created by TrueCrypt), then to open the password-vera,
\fB--truecrypt\fP or \fB-y\fP must also be specified.

If \fB--conf\fP or \fB-c\fP is specified when creating the vera, then \fI-c\fP or
\fI--conf\fP must be specified again when opening the vera so pass vera can use the
information located within the configuration file (\fI$XDG_CONFIG_HOME/pass-vera\fP).
See \fI--conf\fP in the \fBpass vera\fP section for more information, as well as the
\fBCONFIGURATION\fP section at the bottom of this page.

If \fB--force\fP is specified, the password vera will create or mount the
password-store to a volume that is in use, or it will force dismount a volume
that is in use. This can also overwrite files, so use cautiously.

If \fIsubfolder\fP is specified, the password-store will be opened in the subfolder.
Otherwise, pass vera will open in \fIPASSWORD_STORE_DIR\fP if set, and if not, then
it will open in \fI~/.password-store\fP.

.TP
\fBpass close\fP [\fB--force\fP, \fB-f\fP] [\fB--conf\fP=[\fIa|auto|*\fP], \fB-c\fP [\fIa|auto|*\fP]] [\fIstore\fP]

Close a password vera.

If \fB--conf\fP or \fB-c\fP was specified when creating the vera, it must again be specified
when closing the vera. See \fI--conf\fP in the \fBpass vera\fP section for more information,
as well as the \fBCONFIGURATION\fP section at the bottom of this page.

If \fB--force\fP is specified, the password vera will create or mount the
password-store to a volume that is in use, or it will force dismount a volume
that is in use. This can also overwrite files, so use cautiously.

If \fIstore\fP is specified, pass close will try to close the store associated with the file.
Otherwise, pass close will close the the vera opened with the file \fIPASSWORD_STORE_VERA_FILE\fP.
VeraCrypt works in such a way that a file is created and when mounted to a computer it becomes
an external drive. When pass-vera closes the password-store it is dismounting the drive at the location
of the file that is storing all of the data.

.SH OPTIONS
.TP
\fB\-n\fB, \-\-no-init\fR
Do not initialize the password-store

.TP
\fB\-g\fB, \-\-gen-conf\fR
Generate a default JSON or YAML configuration file

.TP
\fB\-c\fB, \-\-conf\fR
Use the configuration file placed at $XDG_CONFIG_HOME/pass-vera (JSON or YAML)

.TP
\fB\-t\fB, \-\-timer\fR
Close the store after a given time

.TP
\fB\-p\fB, \-\-path\fR
Create the store for that specific subfolder

.TP
\fB\-y\fB, \-\-truecrypt\fR
Enable compatiblity with TrueCrypt

.TP
\fB\-k\fB, \-\-vera\-key\fR
Create a key with /dev/urandom instead of GPG

.TP
\fB\-i\fB, \-\-invisi\-key\fR
Create a key that is deleted after it is used, though it can be re-used

.TP
\fB\-\-tmp\-key\fR
Create a one-time key for a one-time accessible vera

.TP
\fB\-o\fB, \-\-overwrite\-key\fR
Overwrite existing key in favor of the one specified

.TP
\fB\-\-for\-me\fR
When creating the password-vera, copy the existing password-store over

.TP
\fB\-r\fB, \-\-reencrypt\fR
When creating the password-vera and using \fB\-\-for\-me\fR, re-encrypt all files during the
transfer process

.TP
\fB\-f\fB, \-\-force\fR
Force the vera operations (i.e., even if mounted volume is in use)

.TP
\fB\-s\fB, \-\-status\fR
Show status of pass vera, (i.e., open or closed)

.TP
\fB\-u\fB, \-\-usage\fR
Show the space used and space available on the vera container

.TP
\fB\-q\fB, \-\-quiet\fR
Do not print any messages

.TP
\fB\-v\fB, \-\-verbose\fR
Print more messages

.TP
\fB\-d\fB, \-\-debug\fR
Enable debugging of the launch agent. The path of the stderr file will
be \fI$HOME/pass-vera-stderr.log\fP and the path of the stdout file will be
\fI$HOME/pass-vera-stdout.log\fP

.TP
\fB\-\-unsafe\fR
Does not encrypt free space when creating a device-hosted volume

.TP
\fB\-V\fB, \-\-version\fR
Show version information

.TP
\fB\-h\fB, \-\-help\fR
Show usage message


.SH EXAMPLES

.TP
Create a new password vera
.B zx2c4@laptop ~ $ pass vera Jason@zx2c4.com
.br
 (*) GPG key created
.br
  Enter password: ****************
.br
  Re-enter password: ****************
.br
  Done: 100.000%  Speed: 6.4 MiB/s  Left: 0 s
.br
  The VeraCrypt volume has been successfully created.
.br
  Enter password for ~/.password.vera: ****************
.br
 (*) Your password vera has been created and opened in: ~/.password-store
.br
 (*) password-store initialized for Jason@zx2c4.com.
.br
  .  Your vera is: ~/.password.vera
.br
  .  Your vera key is: ~/.password.key.vera
.br
  .  You can now use pass as usual.
.br
  .  When finished, close the password vera using 'pass close'.

.TP
Open a password vera
.B zx2c4@laptop ~ $ pass open
.br
  Enter password for ~/.password.vera: ****************
.br
 (*) Your password vera has been opened in: ~/.password-store
.br
  .  You can now use pass as usual.
.br
  .  When finished, close the password vera using 'pass close'.

.TP
Close a password vera
.B zx2c4@laptop ~ $ pass close
.br
 (*) Your password vera has been closed.
.br
  .  Your passwords remain present in: ~/.password.vera

.TP
Create a new password vera and set a timer
.B zx2c4@laptop ~ $ pass vera Jason@zx2c4.com --timer="1 hour"
.br
 (*) GPG key created
.br
  Enter password: ****************
.br
  Re-enter password: ****************
.br
  Done: 100.000%  Speed: 6.4 MiB/s  Left: 0 s
.br
  The VeraCrypt volume has been successfully created.
.br
  Enter password for ~/.password-store: ****************
.br
 (*) pass-close.password.vera.plist loaded
.br
 (*) Your password vera has been created and opened in ~/.password-store.
.br
 (*) password-store initialized for Jason@zx2c4.com.
.br
  .  Your vera is: ~/.password.vera
.br
  .  Your vera key is: ~/.password.key.vera
.br
  .  You can now use pass as usual.
.br
  .  This password-store will be closed in: 1 hour
.br

.TP
 Open a password vera, set a timer, and add additional time after 5 minutes have passed
.B zx2c4@laptop ~ $ pass open --timer="10 minutes"
.br
  Enter password for ~/.password.vera: ****************
.br
 (*) pass-close.password.vera.plist loaded
.br
 (*) Your password vera has been opened in: ~/.password-store
.br
  .  You can now use pass as usual.
.br
  .  This password-store will be closed in: 10 minutes
.br
.B zx2c4@laptop ~ $ pass open --timer="10 minutes"
.br
  w  The veracrypt drive is already mounted, not opening
.br
 (*) pass-close.password.vera.plist timer has been updated
.br
 (*) Your password vera has been opened in: ~/.password-store
.br
  .  You can now use pass as usual.
.br
  .  This password-store will be closed in: 15 minutes

.TP
Create a password vera using an 'invisible key' & copy an existing password-store (\fIPASSWORD_STORE_DIR\fP)
.B zx2c4@laptop ~ $ pass vera Jason@zx2c4.com --for-me --invisi-key
.br
 (*) Invisible key created
.br
  Automatically transferring password stores:
.br
		  [ /Users/Jason/.password-store/ ]
.br
  Enter password: ****************
.br
  Re-enter password: ****************
.br
  Done: 100.000%  Speed: 6.1 MiB/s  Left: 0 s
.br
  The VeraCrypt volume has been successfully created.
.br
  Enter password for ~/.password.vera: ****************
.br
 (*) Your password vera has been created and opened in: ~/password-store
.br
 (*) Password store initialized for Jason@zx2c4.com
.br
  .  Your vera is: ~/.password.vera
.br
  .  Your vera key is: /var/~/dl7rz8zgn/T//pass.H9qIkMm/.invisi.key
.br
  .  You can now use pass as usual.
.br
  .  When finished, close the password vera using 'pass close'.

.TP
Create a password vera using a custom configuration file, as well as use an 'invisible key'
.B zx2c4@laptop ~ $ pass vera Jason@zx2c4.com --conf c --invisi-key
.br
  .	Using JSON configuration: vera.json
.br
  Enter password: ****************
.br
  Re-enter password: ****************
.br
  Done: 100.000%  Speed: 6.1 MiB/s  Left: 0 s
.br
  The VeraCrypt volume has been successfully created.
.br
  Enter password for ~/.password.vera: ****************
.br
 (*) Your password vera has been created and opened in: ~/.password-store
.br
 (*) Password store initialized for Jason@zx2c4.com
.br
  .  Your vera is: ~/.password.vera
.br
  .  Your conf is: /$XDG_CONFIG_HOME/pass-vera/vera.json
.br
  .  Your vera key is: /var/~/dl7rz8zgn/T//pass.H9qIkMm/.invisi.key
.br
  .  You can now use pass as usual.
.br
  .  When finished, close the password vera using 'pass close'.



.SH ENVIRONMENT VARIABLES
.TP
.I PASSWORD_STORE_VERA
Path to veracrypt executable
.TP
.I PASSWORD_STORE_VERA_FILE
Path to the password vera, by default \fI~/.password.vera\fP
.TP
.I PASSWORD_STORE_VERA_KEY
Path to the password vera key file by default \fI~/.password.key.vera\fP
.TP
.I PASSWORD_STORE_VERA_SIZE
Password vera size in MB, by default \fI10\fP
.TP
.I PASSWORD_STORE_VERA_CONF
Location of configuration file


.SH CONFIGURATION
The configuration file can be made in both \fIJSON\fP and \fIYAML\fP files.
JSON files are preferred and are generated when using \fBpass vera --gen-conf\fP.
In the example YAML configuration file below, available options are mentioned above.
For more information and explanations of these arguments, \fBveracrypt -t -h\fP
can be ran.
.TP
.I YAML
.br
\fBvolume-type:    normal\fP \fI# normal, hidden (hidden requires normal first)\fP
.br
\fBcreate:         /Users/user/.password.vera\fP \fI# any file, full path\fP
.br
\fBsize:           15M\fP \fI# any size\fP
.br
\fBencryption:     aes-twofish-serpent\fP
.br
\fI# (1) aes (2) serpent (3) twofish (4) camellia (5) kuznyechik\fP
.br
\fI# (6) aes-twofish (7) aes-twofish-serpent (8) camellia-kuznyechik\fP
.br
\fI# (9) camellia-serpent (10) kuznyechik-aes (11) kuznyechik-serpent-camellia\fP
.br
\fI# (12) kuznyechik-twofish (13) serpent-aes (14) serpent-twofish-aes \fP
.br
\fI# (15) twofish-serpent\fP
.br
\fBhash:           sha-512\fP \fI# sha-512, whirlpool, sha-256, streebog\fP
.br
\fBfilesystem:     exFAT\fP \fI# non, fat, exfat, apfs, mac-os-extended\fP
.br
\fBpim:            0\fP \fI# positive integer (Personal Iterations Multiplier)\fP
.br
\fBkeyfiles:       /Users/user/.password.vera.key\fP \fI# none, any file, full path\fP
.br
\fBrandom-source:  /dev/urandom\fP \fI# none, urandom\fP
.br
\fBtruecrypt:      0\fP \fI# 1 or 0\fP
.br
\fBunsafe:         0\fP \fI# 1 or 0\fP
.br
\fBslot:           0\fB \fI# slot to mount container\fP


.SH COMPLETIONS
.TP
.I ZSH
There are three \fI.zsh\fP scripts that should be installed automatically when
calling the Makefile; however, there is a zsh script titled \fIpasscomp.zsh\fP which
will modify \fBpass\fP's completion file (\fI_pass\fP) to allow for the three subcommands
associated with \fBpass vera\fP to have completions called. The only way I have
figured out how to call them without this is to use \fIpass-vera\fP, though this
is not the command.

The file can be modified and updated by running:
.br
        \fB./passcomp.zsh install\fP
.br
The completions can be removed by running:
.br
        \fB./passcomp.zsh remove\fP

.TP
.I BASH
There is a bash completion file that I have not tested, though it should work.


.SH SEE ALSO
.BR pass(1),
.BR veracrypt(1),
.BR launchctl(1),
.BR fzf(1),
.BR pass-clip(1)
.BR pass-ssh(1),
.BR pass-import(1),

.SH AUTHORS
.B pass vera
.ME .
was written by
.MT lucas@burnsac.xyz
Lucas Burns
.ME .

.SH COPYING
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
